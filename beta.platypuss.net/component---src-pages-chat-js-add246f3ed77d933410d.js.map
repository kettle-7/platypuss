{"version":3,"file":"component---src-pages-chat-js-add246f3ed77d933410d.js","mappings":"kKAEO,MAAMA,EAAaA,EAAGC,WACjBC,EAAAA,cAAA,cAAQA,EAAAA,cAAA,MAAIC,QAASA,KAAKC,OAAOC,SAAW,GAAG,EAAGC,MAAO,CAACC,OAAQ,YAAaN,GAAgB,qB,qHCmBvGO,EAAU,CAAC,EA6Cf,SAASC,GAAW,QAACD,IACnB,OAAQN,EAAAA,cAAA,OAAKQ,UAAU,UAAUC,GAAG,cAClCT,EAAAA,cAAA,OAAKQ,UAAU,aAAaE,IAAI,GAAGC,IAAI,IAAIF,GAAG,oBAC7CG,OAAOC,OAAOP,GAASQ,KAAIC,GAAWf,EAAAA,cAACgB,EAAU,CAACD,OAAQA,EAAQE,UAAWC,SAElF,CAGA,SAASC,GAAS,cAACC,IACjB,OAAQpB,EAAAA,cAAA,OAAKQ,UAAU,UAAUC,GAAG,cAClCT,EAAAA,cAAA,OAAKQ,UAAU,uCAAuCE,IAAI,GAAGC,IAAI,IAAIF,GAAG,oBAE5E,CAGA,SAASY,GAAc,cAACD,IACtB,OAAQpB,EAAAA,cAAA,OAAKS,GAAG,iBACdT,EAAAA,cAAA,OAAKS,GAAG,sBACRT,EAAAA,cAAA,OAAKS,GAAG,gBAAe,IACrBT,EAAAA,cAAA,OAAKS,GAAG,qBACRT,EAAAA,cAAA,OAAKS,GAAG,gBACRT,EAAAA,cAAA,OAAKS,GAAG,sBAEVT,EAAAA,cAAA,OAAKS,GAAG,sBAEZ,CAGA,SAASO,GAAW,OAACD,EAAM,UAAEE,IAK3B,OAJCF,EAAOO,SAAUP,EAAOQ,aAAevB,EAAAA,SAAe,CACrDwB,QAAS,GACTC,YAAa,gCAEPzB,EAAAA,cAAA,OAAKQ,UAAU,aAAaE,IAAI,4BAA4BC,IAAI,MAC1E,CAGO,MAAMe,EAAOA,IAClB1B,EAAAA,cAAA,aAAO,qBAIM,SAAS2B,IAEtB,IAAKC,EAA6BC,GAAkC7B,EAAAA,SAAe,KAC9EoB,EAAeU,GAAoB9B,EAAAA,SAAe,CAACsB,SAAS,CAAC,KAC7DS,EAAaC,GAAkBhC,EAAAA,SAAe,CAAC,GACpD,OAAQA,EAAAA,cAAAA,EAAAA,SAAA,KACNA,EAAAA,cAACiC,EAAAA,EAAiB,CAAClC,MAAOqB,EAAcE,SAASvB,QACjDC,EAAAA,cAAA,YACEA,EAAAA,cAAA,OAAKS,GAAG,YACNT,EAAAA,cAACO,EAAU,CAACD,QAASA,IACrBN,EAAAA,cAACqB,EAAa,MACdrB,EAAAA,cAACmB,EAAQ,QAIjB,C","sources":["webpack://platypuss-beta/./src/components/common.jsx","webpack://platypuss-beta/./src/pages/chat.js"],"sourcesContent":["import React from \"react\";\n\nexport const PageHeader = ({ title }) => {\n    return (<header><h2 onClick={()=>{window.location = \"/\"}} style={{cursor: \"pointer\"}}>{title ? title : \"(Beta!) Platypuss\"}</h2></header>);\n};","/************************************************************************\n* Copyright 2021-2024 Ben Keppel                                        *\n*                                                                       *\n* This program is free software: you can redistribute it and/or modify  *\n* it under the terms of the GNU General Public License as published by  *\n* the Free Software Foundation, either version 3 of the License, or     *\n* (at your option) any later version.                                   *\n*                                                                       *\n* This program is distributed in the hope that it will be useful,       *\n* but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n* GNU General Public License for more details.                          *\n*                                                                       *\n* You should have received a copy of the GNU General Public License     *\n* along with this program.  If not, see <http://www.gnu.org/licenses/>. *\n************************************************************************/\n// °^° i am pingu\n\nimport * as Common from \"../components/common\";\nimport * as React from \"react\";\nimport \"./light.scss\";\n\nvar servers = {}; // Data related to servers the user is in\nvar userCache = {}; // A cache of data on users so we don't constantly have to look it up\nvar messageCache = {}; // The same but for messages\nvar focusedServerRenderedRooms = {}; // The <RoomLink/> elements in the sidebar for this server\nvar permissions = {}; // The permissions we have, key being an identifier and value being a friendly description\n\nvar authUrl = \"https://platypuss.net\"; // Authentication server, you shouldn't have to change this but it's a variable just in case\nconst emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/gi;\n\n// thanks bryc on stack overflow ^w^\nfunction hashPassword (str, seed = 20) { // hashes passwords somehow\n    let h1 = 0xdeadbeef ^ seed, // had to be something\n    h2 = 0x41c6ce57 ^ seed;\n    for (let i = 0, ch; i < str.length; i++) {\n        ch = str.charCodeAt(i);\n        // Math.imul multiplies without loss of precision\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n    \n    h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n    h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n    return (h2>>>0).toString(16).padStart(8,0)+(h1>>>0).toString(16).padStart(8,0);\n};\n\n// Fetch data on one user, from cache if possible but from the authentication server otherwise\nfunction fetchUser(id) {\n  return new Promise((resolve, reject) => {\n    if (userCache[id] == undefined) {\n      // try fetch data from the authentication server\n      fetch(authUrl+'/uinfo?id='+id).then(response => {\n        // try turn the json response into an object\n        response.json().then(responseObject => {\n          userCache[id] = responseObject;\n          resolve(responseObject);\n        }).catch(()=>reject()); // if it's not valid json then reject the promise\n      }).catch(()=>reject()); // same for if we can't connect to the server for some reason\n    } else {\n      resolve(userCache[id]); // we already know about the user so don't look them up\n    }\n  });\n}\n\n// The bar on the left showing the servers you're in, also for navigation\nfunction ServersBar({servers}) {\n  return (<div className=\"sidebar\" id=\"serversBar\">\n    <img className=\"serverIcon\" src=\"\" alt=\"+\" id=\"newServerButton\"/>\n    {Object.values(servers).map(server => (<ServerIcon server={server} serverBar={this}></ServerIcon>))}\n  </div>);\n}\n\n// The bar on the right showing other server members\nfunction PeersBar({focusedServer}) {\n  return (<div className=\"sidebar\" id=\"serversBar\">\n    <img className=\"serverIcon material-symbols-outlined\" src=\"\" alt=\"+\" id=\"newServerButton\"/>\n  </div>);\n}\n\n// The midsection between these two aforementioned bars\nfunction MiddleSection({focusedServer}) {\n  return (<div id=\"middleSection\">\n    <div id=\"aboveScrolledArea\"></div>\n    <div id=\"scrolledArea\"> {/* Has a scrollbar, contains load more messages button but not message typing box */}\n      <div id=\"aboveMessageArea\"></div>\n      <div id=\"messageArea\"></div>\n      <div id=\"belowMessageArea\"></div>\n    </div>\n    <div id=\"belowScrolledArea\"></div>\n  </div>);\n}\n\n// a server icon button thing\nfunction ServerIcon({server, serverBar}) {\n  [server.manifest, server.setManifest] = React.useState({\n    iconURL: \"\",\n    serverTitle: \"connecting to the server???\"\n  });\n  return (<img className=\"serverIcon\" src=\"{server.manifest.iconURL}\" alt=\"🐙\"/>);\n}\n\n// The document head contains metadata, most of it is defined in use-site-metadata.jsx\nexport const Head = () => (\n  <title>(Beta!) Platypuss</title>\n);\n\n// The page itself\nexport default function ChatPage() {\n  // we have no messages by default\n  var [focusedRoomRenderedMessages, setFocusedRoomRenderedMessages] = React.useState([]); // The <Message/> elements shown in the view, set in ChatPage\n  var [focusedServer, setFocusedServer] = React.useState({manifest:{}}); // An object representing the currently focused server\n  var [focusedRoom, setFocusedRoom] = React.useState({}); // An object representing the currently focused room\n  return (<>\n    <Common.PageHeader title={focusedServer.manifest.title}/>\n    <main>\n      <div id=\"chatPage\">\n        <ServersBar servers={servers}/>\n        <MiddleSection/>\n        <PeersBar/>\n      </div>\n    </main>\n  </>);\n}\n"],"names":["PageHeader","title","React","onClick","window","location","style","cursor","servers","ServersBar","className","id","src","alt","Object","values","map","server","ServerIcon","serverBar","this","PeersBar","focusedServer","MiddleSection","manifest","setManifest","iconURL","serverTitle","Head","ChatPage","focusedRoomRenderedMessages","setFocusedRoomRenderedMessages","setFocusedServer","focusedRoom","setFocusedRoom","Common"],"sourceRoot":""}