{"version":3,"file":"component---src-pages-index-js-6e5e48da9d17eb6fd0f5.js","mappings":"mKAEO,MAAMA,EAAaA,EAAEC,QAAOC,iBAAgBC,YAAWC,OACzDD,EAAOE,mBAAoBF,EAAOG,uBAAyBC,EAAAA,SAAe,CAAC,GAEpEA,EAAAA,cAAA,SAAYH,EAChBG,EAAAA,cAAA,OAAKC,UAAU,SAASC,QAASP,GAAkC,MAAOQ,OAAOC,SAAW,GAAG,GAAGC,MAAO,CAACC,OAAQ,WAAYC,IAAI,0BAClIP,EAAAA,cAAA,MAAIE,QAASA,KAAOC,OAAOC,SAAW,GAAG,EAAGC,MAAO,CAACC,OAAQ,YACvDZ,GAAgB,qBAErBM,EAAAA,cAAA,OAAKK,MAAO,CAACG,SAAU,KACvBR,EAAAA,cAAA,OAAKC,UAAU,SAASI,MAAO,CAACC,OAAQ,WAAYC,IAAKX,EAAOE,mBAAmBW,U,yFCW3F,IAAIC,EAA4B,oBAAXP,OAErB,IACIQ,EAAUC,EADVhB,EAAS,CAAC,EAId,SAASiB,EAAcC,EAAKC,EAAO,IAC/B,IAAIC,EAAK,WAAaD,EACtBE,EAAK,WAAaF,EAClB,IAAK,IAAWG,EAAPC,EAAI,EAAOA,EAAIL,EAAIM,OAAQD,IAChCD,EAAKJ,EAAIO,WAAWF,GAEpBH,EAAKM,KAAKC,KAAKP,EAAKE,EAAI,YACxBD,EAAKK,KAAKC,KAAKN,EAAKC,EAAI,YAM5B,OAHAF,EAAKM,KAAKC,KAAKP,EAAMA,IAAO,GAAK,YAAcM,KAAKC,KAAKN,EAAMA,IAAO,GAAK,YAC3EA,EAAKK,KAAKC,KAAKN,EAAMA,IAAO,GAAK,YAAcK,KAAKC,KAAKP,EAAMA,IAAO,GAAK,aAEnEC,IAAK,GAAGO,SAAS,IAAIC,SAAS,EAAE,IAAIT,IAAK,GAAGQ,SAAS,IAAIC,SAAS,EAAE,EAChF,CAEA,IAAIC,GAAmB,EAEvB,SAASC,IACPC,MAAM,8BAAoB,CACxBC,OAAQ,OACRC,QAAS,CACP,eAAgB,cAElBC,KAAMC,KAAKC,UAAU,CACnBC,UAAWR,EACXS,IAAKT,EACLU,OAAQ,cACRC,IAAK,cACLC,MAAO3B,EAAS4B,QAAQC,MACxBC,IAAK5B,EAAaD,EAAY2B,QAAQC,OACtCE,SAAU7B,EAAaD,EAAY2B,QAAQC,WAG5CG,MAAKC,GAAYA,EAASC,SAAQF,MAAKC,IACxCE,QAAQC,IAAIH,GACZI,aAAaC,QAAQ,YAAaL,EAASM,WAC3C/C,OAAOC,SAAW,OAAO,GAE7B,CA8CA,UA5CkB+C,KAEhBxC,EAAWX,EAAAA,OAAa,MACxBY,EAAcZ,EAAAA,OAAa,MAC3B,IAAIoD,EAAQ,SAOZ,OANI1C,GACEsC,aAAaK,QAAQ,WACvBD,EAAQJ,aAAaK,QAAQ,WAEhCzD,EAAOwD,MAAOxD,EAAO0D,UAAYtD,EAAAA,SAAeoD,GAEzCpD,EAAAA,cAAAA,EAAAA,SAAA,KACNA,EAAAA,cAACuD,EAAAA,EAAiB,CAACtD,UAA2B,SAAhBL,EAAOwD,MAAmB,cAAgB,aAAcxD,OAAQA,IAC9FI,EAAAA,cAAA,QAAMwD,GAAG,WAAWvD,UAA2B,QAAhBL,EAAOwD,MAAkB,aAAe,eACrEpD,EAAAA,cAAA,KAAGyD,KAAK,SAAQ,OAChBzD,EAAAA,cAAA,UAAI,wCAGJA,EAAAA,cAAA,SAAG,6VAKGA,EAAAA,cAAA,KAAGyD,KAAK,yBAAwB,kBAAkB,iBAExDzD,EAAAA,cAAA,OAAKwD,GAAG,IAAIvD,UAAU,cAAcI,MAAO,CAACqD,QAAS,SAAS1D,EAAAA,cAAA,OAAKwD,GAAG,IAAIvD,UAAU,SAClFD,EAAAA,cAAA,MAAIwD,GAAG,QAAO,WACdxD,EAAAA,cAAA,QAAMwD,GAAG,QAAO,sDAAmDxD,EAAAA,cAAA,WAAK,WAAQA,EAAAA,cAAA,KAAGyD,KAAK,yBAAwB,qBAAqB,aACrIzD,EAAAA,cAAA,OAAKwD,GAAG,aACNxD,EAAAA,cAAA,OAAKK,MAAO,CAACqD,QAAQ,OAAOC,oBAAoB,cAEhD3D,EAAAA,cAAA,aAAO,kBAAsBA,EAAAA,cAAA,SAAO4D,KAAK,QAAQJ,GAAG,QAAQvD,UAAU,UAAU4D,IAAKlD,IAErFX,EAAAA,cAAA,aAAO,aAAiBA,EAAAA,cAAA,SAAO4D,KAAK,WAAWJ,GAAG,OAAOvD,UAAU,UAAU4D,IAAKjD,KAE5EZ,EAAAA,cAAA,WACNA,EAAAA,cAAA,UAAQE,QAASyB,EAAkB6B,GAAG,QAAO,eAInDxD,EAAAA,cAAA,UAAQC,UAA2B,QAAhBL,EAAOwD,MAAkB,aAAe,eAAe,wBACzE,EAKE,MAAMU,EAAOA,IAClB9D,EAAAA,cAAA,aAAO,oB","sources":["webpack://platypuss-beta/./src/components/common.jsx","webpack://platypuss-beta/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\n\nexport const PageHeader = ({title, iconClickEvent, states, ...props}) => {\n    [states.accountInformation, states.setAccountInformation] = React.useState({});\n\n    return (<header {...props}>\n        <img className=\"avatar\" onClick={iconClickEvent ? iconClickEvent : () => {window.location = \"/\"}} style={{cursor: \"pointer\"}} src=\"/icons/icon-48x48.png\"/>\n        <h2 onClick={() => {window.location = \"/\"}} style={{cursor: \"pointer\"}}>\n            {title ? title : \"(Beta!) Platypuss\"}\n        </h2>\n        <div style={{flexGrow: 1}}></div>\n        <img className=\"avatar\" style={{cursor: \"pointer\"}} src={states.accountInformation.avatar}/>\n    </header>);\n};","/************************************************************************\n* Copyright 2021-2024 Ben Keppel                                        *\n*                                                                       *\n* This program is free software: you can redistribute it and/or modify  *\n* it under the terms of the GNU General Public License as published by  *\n* the Free Software Foundation, either version 3 of the License, or     *\n* (at your option) any later version.                                   *\n*                                                                       *\n* This program is distributed in the hope that it will be useful,       *\n* but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n* GNU General Public License for more details.                          *\n*                                                                       *\n* You should have received a copy of the GNU General Public License     *\n* along with this program.  If not, see <http://www.gnu.org/licenses/>. *\n************************************************************************/\n\nimport * as Common from \"../components/common\";\nimport * as React from \"react\";\nimport \"./themery.scss\";\n\nconst emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/gi;\nvar browser = typeof window !== \"undefined\"; // check if we're running in a browser rather than the build environment\nconst authUrl = \"https://platypuss.net\"; // this shouldn't need to change but just in case\nvar states = {}; // serves the same purpose as in chat.js\nvar emailRef, passwordRef;\n\n// thanks bryc on stack overflow ^w^\nfunction hashPassword (str, seed = 20) { // hashes passwords somehow\n    let h1 = 0xdeadbeef ^ seed, // had to be something\n    h2 = 0x41c6ce57 ^ seed;\n    for (let i = 0, ch; i < str.length; i++) {\n        ch = str.charCodeAt(i);\n        // Math.imul multiplies without loss of precision\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n    \n    h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n    h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n    return (h2>>>0).toString(16).padStart(8,0)+(h1>>>0).toString(16).padStart(8,0);\n};\n\nvar createNewAccount = false; // whether we're signing in or making a new account, signing in being false and default\n\nfunction doTheLoginThingy() {\n  fetch(`${authUrl}/login`, { // send this data to the authentication server, accepting a json response\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'text/plain'\n    },\n    body: JSON.stringify({ // the information we send to the authentication server\n      createNew: createNewAccount,\n      ift: createNewAccount, // deprecated\n      server: \"example.com\", // can be anything so long as no platypuss server will actually be hosted there,\n      ser: \"example.com\", // also deprecated\n      email: emailRef.current.value,\n      pwd: hashPassword(passwordRef.current.value), // guess what ? also deprecated >:3\n      password: hashPassword(passwordRef.current.value)\n    })\n    // we take the response and save the session token to the browser\n  }).then(response => response.json()).then(response => {\n    console.log(response);\n    localStorage.setItem(\"sessionID\", response.sessionID);\n    window.location = \"/chat\";\n  });\n}\n\nconst IndexPage = () => {\n  // These let us refer to the text boxes later on\n  emailRef = React.useRef(null);\n  passwordRef = React.useRef(null);\n  let theme = \"medium\";\n  if (browser)\n    if (localStorage.getItem(\"theme\"))\n      theme = localStorage.getItem(\"theme\");\n\n  [states.theme, states.setTheme] = React.useState(theme);\n\n  return (<>\n    <Common.PageHeader className={states.theme == \"light\" ? \"lightThemed\" : \"darkThemed\"} states={states}/>\n    <main id=\"mainPage\" className={states.theme == \"dark\" ? \"darkThemed\" : \"lightThemed\"}>\n      <a href=\"/chat\">cat</a>\n      <h1>\n        You found the Platypuss public beta!\n      </h1>\n      <p>\n        This website sees new changes to the Platypuss client before they're published.\n        This means you get to try out new features and improvements before they make their way\n        to the main site. Beware though, many of the changes you see here aren't tested and may\n        break certain functionality. Should anything not work properly you're better off using\n        the <a href=\"https://platypuss.net\">stable version</a> of the site.\n      </p>\n      <div id=\"P\" className=\"popupParent\" style={{display: \"flex\"}}><div id=\"p\" className=\"popup\">\n        <h2 id=\"lit1\">Sign In</h2>\n        <span id=\"lit2\">Welcome back! If you don't already have an account <br/> please <a href=\"https://platypuss.net\">create an account</a> instead.</span>\n        <div id=\"loginform\">\n          <div style={{display:\"grid\",gridTemplateColumns:\"auto auto\"}}>\n          {/* The four lines below contain a weird thing with anonymous functions, this is the only way I know of to assign the element to a variable and position it at the same time */}\n          <label>Email address </label><input type=\"email\" id=\"email\" className=\"textBox\" ref={emailRef}/>\n          {/*<label id=\"pr2\">Username </label><input type=\"text\" id=\"unam\" className=\"textBox\" ref={usernameRef}/>*/}\n          <label>Password </label><input type=\"password\" id=\"pwd1\" className=\"textBox\" ref={passwordRef}/>\n          {/*<label id=\"pr1\">Confirm Password </label><input type=\"password\" id=\"pwd2\" className=\"textBox\" ref={secondPasswordRef}/>*/}\n          </div><br/>\n          <button onClick={doTheLoginThingy} id=\"lit3\">Sign In</button>\n        </div>\n      </div></div>\n    </main>\n    <footer className={states.theme == \"dark\" ? \"darkThemed\" : \"lightThemed\"}>links to stuff maybe</footer>\n  </>);\n};\n\nexport default IndexPage;\n\nexport const Head = () => (\n  <title>(Beta!) Platypuss</title>\n);\n"],"names":["PageHeader","title","iconClickEvent","states","props","accountInformation","setAccountInformation","React","className","onClick","window","location","style","cursor","src","flexGrow","avatar","browser","emailRef","passwordRef","hashPassword","str","seed","h1","h2","ch","i","length","charCodeAt","Math","imul","toString","padStart","createNewAccount","doTheLoginThingy","fetch","method","headers","body","JSON","stringify","createNew","ift","server","ser","email","current","value","pwd","password","then","response","json","console","log","localStorage","setItem","sessionID","IndexPage","theme","getItem","setTheme","Common","id","href","display","gridTemplateColumns","type","ref","Head"],"sourceRoot":""}