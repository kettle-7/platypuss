{"version":3,"file":"component---src-pages-index-js-e59018119c4a233706ed.js","mappings":"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","sources":["webpack://platypuss-beta/./src/pages/index.js"],"sourcesContent":["/************************************************************************\n* Copyright 2021-2024 Ben Keppel                                        *\n*                                                                       *\n* This program is free software: you can redistribute it and/or modify  *\n* it under the terms of the GNU General Public License as published by  *\n* the Free Software Foundation, either version 3 of the License, or     *\n* (at your option) any later version.                                   *\n*                                                                       *\n* This program is distributed in the hope that it will be useful,       *\n* but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n* GNU General Public License for more details.                          *\n*                                                                       *\n* You should have received a copy of the GNU General Public License     *\n* along with this program.  If not, see <http://www.gnu.org/licenses/>. *\n************************************************************************/\n\nimport * as React from \"react\";\nimport \"./themery.scss\";\n\nconst emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/gi;\nvar browser = typeof window !== \"undefined\"; // check if we're running in a browser rather than the build environment\nvar pageUrl = browser ? new URL(window.location) : new URL(\"http://localhost:8000\"); // window is not defined in the testing environment so just assume localhost\nconst authUrl = \"https://platypuss.net\"; // this shouldn't need to change but just in case\nvar states = {}; // serves the same purpose as in chat.js\nvar emailRef, passwordRef, confirmPasswordRef, usernameRef;\n\n// thanks bryc on stack overflow ^w^\nfunction hashPassword (str, seed = 20) { // hashes passwords somehow\n    let h1 = 0xdeadbeef ^ seed, // had to be something\n    h2 = 0x41c6ce57 ^ seed;\n    for (let i = 0, ch; i < str.length; i++) {\n        ch = str.charCodeAt(i);\n        // Math.imul multiplies without loss of precision\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n    \n    h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n    h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n    return (h2>>>0).toString(16).padStart(8,0)+(h1>>>0).toString(16).padStart(8,0);\n};\n\nfunction doTheLoginThingy(createNewAccount) {\n  if (createNewAccount) {\n    if (passwordRef.current.value != confirmPasswordRef.current.value) {\n      states.setActivePopover(<CreateAccountPopover error=\"Your passwords don't match\"/>);\n      return;\n    }\n    if (passwordRef.current.value.replace(/[\\n\\r\\t ]/g, \"\") == \"\") {\n      states.setActivePopover(<CreateAccountPopover error=\"Your password must be at least one character\"/>);\n      return;\n    }\n    if (usernameRef.current.value.replace(/[\\n\\r\\t ]/g, \"\") == \"\") {\n      states.setActivePopover(<CreateAccountPopover error=\"Your username must be at least one character\"/>);\n      return;\n    }\n  }\n  fetch(`${authUrl}/login`, { // send this data to the authentication server, accepting a json response\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'text/plain'\n    },\n    body: JSON.stringify({ // the information we send to the authentication server\n      createNew: createNewAccount,\n      server: \"example.com\", // can be anything so long as no platypuss server will actually be hosted there,\n      email: emailRef.current.value,\n      username: createNewAccount ? usernameRef.current.value : undefined,\n      password: hashPassword(passwordRef.current.value)\n    })\n    // we take the response and save the session token to the browser\n  }).then(response => response.json()).then(response => {\n    if (createNewAccount) {\n      if (response.alreadyExists) {\n        states.setActivePopover(<CreateAccountPopover error={<>There's already an account with that email address,\n          would you like to <a href=\"#\" onClick={() => states.setActivePopover(<SignInPopover/>)}>sign in</a> instead?</>}/>);\n        return;\n      }\n      states.setActivePopover(<Popover title=\"Check your emails!\">Thanks for joining us, \n        you should get <br/> an email in the next few minutes to <br/> confirm the new account.</Popover>);\n      return;\n    } else {\n      if (!response.alreadyExists) {\n        states.setActivePopover(<SignInPopover error={<>There's no account with that email address,\n          would you like to <a href=\"#\" onClick={() => states.setActivePopover(<CreateAccountPopover/>)}>create one</a>?</>}/>);\n        return;\n      }\n      if (!response.passwordMatches) {\n        states.setActivePopover(<SignInPopover error=\"Incorrect password for this account\"/>);\n        return;\n      }\n    }\n    localStorage.setItem(\"sessionID\", response.sessionID);\n    window.location = \"/chat\";\n  });\n}\n\nfunction PageHeader ({title, iconClickEvent, ...props}) {\n    [states.accountInformation, states.setAccountInformation] = React.useState({});\n\n    React.useEffect(() => {\n        fetch(authUrl + \"/uinfo?id=\" + localStorage.getItem(\"sessionID\"))\n            .then(data => data.json())\n            .then(data => states.setAccountInformation(data))\n            .catch(() => { if (pageUrl.pathname == \"/chat\") window.location = \"/\" });\n    }, []);\n\n    return (<header {...props}>\n        <img className=\"avatar\" onClick={iconClickEvent ? iconClickEvent : () => {window.location = \"/\"}} style={{cursor: \"pointer\"}} src=\"/icons/icon-48x48.png\"/>\n        <h2 onClick={() => {window.location = \"/\"}} style={{cursor: \"pointer\"}}>\n            {title ? title : \"(Beta!) Platypuss\"}\n        </h2>\n        <div style={{flexGrow: 1}}></div>\n        <img className=\"avatar\" alt=\"🐙\" style={{cursor: \"pointer\"}} src={authUrl+states.accountInformation.avatar}/>\n    </header>);\n};\n\nfunction PopoverParent({...props}) {\n  [states.activePopover, states.setActivePopover] = React.useState(null);\n  return (\n    <div id=\"popoverParent\" style={{display: states.activePopover == null ? \"none\" : \"flex\"}} onClick={() => {\n      states.setActivePopover(null);\n    }} {...props}>{states.activePopover}</div>\n  );\n}\n\n// for popups / popovers in desktop, render as separate screens on mobile\nfunction Popover({children, title, style={}, ...props}) {\n  return <div id=\"popover\" style={{margin: style.margin ? style.margin : \"auto\", ...style}} onClick={event => {\n    event.stopPropagation();\n  }} {...props}>\n    <div id=\"popoverHeaderBar\">\n      <h3>{title}</h3>\n      <div style={{flexGrow: 1}}></div>\n      <button onClick={() => {states.setActivePopover(null);}} className=\"material-symbols-outlined\">close</button>\n    </div>\n    {children}\n  </div>\n}\n\nfunction SignInPopover ({ error=\"\" }) {\n  return (<Popover title=\"Sign In\">\n    <span>Welcome back! If you don't already have an account <br/> please <a href=\"#\" onClick={() => states.setActivePopover(<CreateAccountPopover/>)}>create an account</a> instead.</span>\n    <div id=\"loginform\">\n      <em id=\"signInErrorMessage\">{error}</em>\n      <div style={{display:\"grid\",gridTemplateColumns:\"auto auto\"}}>\n      <label>Email address </label><input type=\"email\" id=\"email\" className=\"textBox\" ref={emailRef}/>\n      <label>Password </label><input type=\"password\" id=\"password\" className=\"textBox\" ref={passwordRef}/>\n      </div><br/>\n      <button onClick={() => doTheLoginThingy(false)}>Sign In</button>\n    </div>\n  </Popover>);\n}\n\nfunction CreateAccountPopover ({ error=\"\" }) {\n  return (<Popover title=\"Create Account\">\n    <span>Welcome to Platypuss! If you already have an account <br/> please <a href=\"#\" onClick={() => states.setActivePopover(<SignInPopover/>)}>sign in</a> instead.</span>\n    <div id=\"loginform\">\n      {error ? <em id=\"signInErrorMessage\">{error}</em> : \"\"}\n      <div style={{display:\"grid\",gridTemplateColumns:\"auto auto\"}}>\n      <label>Email address </label><input type=\"email\" id=\"email\" className=\"textBox\" ref={emailRef}/>\n      <label>Username </label><input type=\"text\" id=\"unam\" className=\"textBox\" ref={usernameRef}/>\n      <label>Password </label><input type=\"password\" id=\"password\" className=\"textBox\" ref={passwordRef}/>\n      <label>Confirm Password </label><input type=\"password\" id=\"confirmPassword\" className=\"textBox\" ref={confirmPasswordRef}/>\n      </div><br/>\n      <button onClick={() => doTheLoginThingy(true)}>Create Account</button>\n    </div>\n  </Popover>);\n}\n\nconst IndexPage = () => {\n  // These let us refer to the text boxes later on\n  emailRef = React.useRef(null);\n  passwordRef = React.useRef(null);\n  usernameRef = React.useRef(null);\n  confirmPasswordRef = React.useRef(null);\n  let theme = \"medium\";\n  if (browser)\n    if (localStorage.getItem(\"theme\"))\n      theme = localStorage.getItem(\"theme\");\n\n  [states.theme, states.setTheme] = React.useState(theme);\n\n  return (<>\n    <PageHeader className={states.theme == \"light\" ? \"lightThemed\" : \"darkThemed\"}/>\n    <main id=\"mainPage\" className={states.theme == \"dark\" ? \"darkThemed\" : \"lightThemed\"}>\n      <a href=\"/chat\">Chat page, only works if you're logged in</a>\n      <h1>\n        You found the Platypuss public beta!\n      </h1>\n      <p>\n        This website sees new changes to the Platypuss client before they're published.\n        This means you get to try out new features and improvements before they make their way\n        to the main site. Beware though, many of the changes you see here aren't tested and may\n        break certain functionality. Should anything not work properly you're better off using\n        the <a href=\"https://platypuss.net\">stable version</a> of the site.\n      </p>\n      <button onClick={() => {states.setActivePopover(<SignInPopover/>)}}>Sign In</button>\n      <button onClick={() => {states.setActivePopover(<CreateAccountPopover/>)}}>Create Account</button>\n    </main>\n    <footer className={states.theme == \"dark\" ? \"darkThemed\" : \"lightThemed\"}>links to stuff maybe</footer>\n    <PopoverParent className={states.theme == \"light\" ? \"lightThemed\" : \"darkThemed\"}/>\n  </>);\n};\n\nexport default IndexPage;\n\nexport const Head = () => (\n  <title>(Beta!) Platypuss</title>\n);\n"],"names":["browser","window","pageUrl","URL","location","authUrl","emailRef","passwordRef","confirmPasswordRef","usernameRef","states","hashPassword","str","seed","h1","h2","ch","i","length","charCodeAt","Math","imul","toString","padStart","doTheLoginThingy","createNewAccount","current","value","setActivePopover","React","CreateAccountPopover","error","replace","fetch","method","headers","body","JSON","stringify","createNew","server","email","username","undefined","password","then","response","json","alreadyExists","href","onClick","SignInPopover","Popover","title","passwordMatches","localStorage","setItem","sessionID","PageHeader","iconClickEvent","props","accountInformation","setAccountInformation","getItem","data","catch","pathname","className","style","cursor","src","flexGrow","alt","avatar","PopoverParent","activePopover","_extends","id","display","children","margin","event","stopPropagation","gridTemplateColumns","type","ref","IndexPage","theme","setTheme","Head"],"sourceRoot":""}