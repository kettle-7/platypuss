{"version":3,"file":"component---src-pages-index-js-f31f0fb5a36b489cf5e3.js","mappings":"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","sources":["webpack://platypuss-beta/./src/components/common.jsx","webpack://platypuss-beta/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\n\nexport const PageHeader = ({ title }) => {\n    return (<header><h2 onClick={()=>{window.location = \"/\"}} style={{cursor: \"pointer\"}}>{title ? title : \"(Beta!) Platypuss\"}</h2></header>);\n};","/************************************************************************\n* Copyright 2021-2024 Ben Keppel                                        *\n*                                                                       *\n* This program is free software: you can redistribute it and/or modify  *\n* it under the terms of the GNU General Public License as published by  *\n* the Free Software Foundation, either version 3 of the License, or     *\n* (at your option) any later version.                                   *\n*                                                                       *\n* This program is distributed in the hope that it will be useful,       *\n* but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n* GNU General Public License for more details.                          *\n*                                                                       *\n* You should have received a copy of the GNU General Public License     *\n* along with this program.  If not, see <http://www.gnu.org/licenses/>. *\n************************************************************************/\n\nimport * as Common from \"../components/common\";\nimport * as React from \"react\";\nimport \"./light.scss\";\n\nconst emailRegexp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/gi;\nconst authUrl = \"https://192.168.1.66\"; // this shouldn't need to change but just in case\nvar emailRef, usernameRef, passwordRef, secondPasswordRef;\n\n// thanks bryc on stack overflow ^w^\nfunction hashPassword (str, seed = 20) { // hashes passwords somehow\n    let h1 = 0xdeadbeef ^ seed, // had to be something\n    h2 = 0x41c6ce57 ^ seed;\n    for (let i = 0, ch; i < str.length; i++) {\n        ch = str.charCodeAt(i);\n        // Math.imul multiplies without loss of precision\n        h1 = Math.imul(h1 ^ ch, 2654435761);\n        h2 = Math.imul(h2 ^ ch, 1597334677);\n    }\n    \n    h1 = Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^ Math.imul(h2 ^ (h2 >>> 13), 3266489909);\n    h2 = Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^ Math.imul(h1 ^ (h1 >>> 13), 3266489909);\n\n    return (h2>>>0).toString(16).padStart(8,0)+(h1>>>0).toString(16).padStart(8,0);\n};\n\nvar createNewAccount = false; // whether we're signing in or making a new account, signing in being false and default\n\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n};\nconst paragraphStyles = {\n  marginBottom: 48,\n};\n\nfunction doTheLoginThingy() {\n  fetch(`${authUrl}/login`, { // send this data to the authentication server, accepting a json response\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'text/plain'\n    },\n    body: JSON.stringify({ // the information we send to the authentication server\n      createNew: createNewAccount,\n      ift: createNewAccount, // deprecated\n      server: \"example.com\", // can be anything so long as no platypuss server will actually be hosted there,\n      ser: \"example.com\", // also deprecated\n      email: emailRef.current.value,\n      pwd: hashPassword(passwordRef.current.value), // guess what ? also deprecated >:3\n      password: hashPassword(passwordRef.current.value)\n    })\n    // we take the response and save the session token to the browser\n  }).then(response => response.json()).then(response => {\n    localStorage.setItem(\"sessionID\", response.sessionID);\n    window.location = \"/chat\";\n  });\n}\n\nconst IndexPage = () => {\n  // These let us refer to the text boxes later on\n  emailRef = React.useRef(null);\n  usernameRef = React.useRef(null);\n  passwordRef = React.useRef(null);\n  secondPasswordRef = React.useRef(null);\n  return (<>\n    <Common.PageHeader/>\n    <main id=\"mainPage\">\n      <a href=\"/chat\">cat</a>\n      <h1 style={headingStyles}>\n        Congratulations\n        <br/>\n        <span>â€” you just made a Skill iSsue site! ðŸŽ‰ðŸŽ‰ðŸŽ‰ :3</span>\n      </h1>\n      <p style={paragraphStyles}>\n        Edit <code>src/pages/index.js</code> to see this page\n        update in real-time. ðŸ˜Ž\n      </p>\n      <div id=\"P\" className=\"popupParent\" style={{display: \"flex\"}} onMouseDown={()=>{return;document.getElementById('P').style.display = 'none'}}><div id=\"p\" className=\"popup\">\n        <h2 id=\"lit1\">Sign In</h2>\n        <span id=\"lit2\">Welcome back! If you don't already have an account <br/> please <a href=\"#\" onClick=\"su()\">create an account</a> instead.</span>\n        <div id=\"loginform\">\n          <div style={{display:\"grid\",gridTemplateColumns:\"auto auto\"}}>\n          {/* The four lines below contain a weird thing with anonymous functions, this is the only way I know of to assign the element to a variable and position it at the same time */}\n          <label>Email address </label><input type=\"email\" id=\"email\" className=\"textBox\" ref={emailRef}/>\n          <label id=\"pr2\">Username </label><input type=\"text\" id=\"unam\" className=\"textBox\" ref={usernameRef}/>\n          <label>Password </label><input type=\"password\" id=\"pwd1\" className=\"textBox\" ref={passwordRef}/>\n          <label id=\"pr1\">Confirm Password </label><input type=\"password\" id=\"pwd2\" className=\"textBox\" ref={secondPasswordRef}/>\n          </div><br/>\n          <button onClick={doTheLoginThingy} id=\"lit3\">Sign In</button>\n        </div>\n      </div></div>\n    </main>\n    <footer>links to stuff maybe</footer>\n  </>);\n};\n\nexport default IndexPage;\n\nexport const Head = () => (\n  <title>(Beta!) Platypuss</title>\n);\n"],"names":["PageHeader","title","React","onClick","window","location","style","cursor","emailRef","usernameRef","passwordRef","secondPasswordRef","hashPassword","str","seed","h1","h2","ch","i","length","charCodeAt","Math","imul","toString","padStart","headingStyles","marginTop","marginBottom","maxWidth","paragraphStyles","doTheLoginThingy","fetch","method","headers","body","JSON","stringify","createNew","ift","server","ser","email","current","value","pwd","password","then","response","json","localStorage","setItem","sessionID","IndexPage","Common","id","href","className","display","onMouseDown","gridTemplateColumns","type","ref","Head"],"sourceRoot":""}